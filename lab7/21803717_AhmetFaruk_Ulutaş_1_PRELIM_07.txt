CS224 / Lab 7
Section 1
Onat Korkmaz / 21704028
Ahmet Faruk UlutaÅŸ / 21803717

------------------- end of header ---------------------------------------------

 --> TRISA
 --> TRISE
 --> PORTA
 --> PORTE

------------------- end of part a ---------------------------------------------

/*
The c embedded code that makes the engine spin using two switches. Clicking 
button0 clockwise turns the motor when clicking button1 counterclockwise. If 
both buttons are clicked, the engine ICQ leaf stops.

Attention!
Configuration  for push-button project :

Connect portA to LEDs
Jumpers of portA are : 5V, pull up ( both of the to the left side )

Connect portE to push-buttons
Jumpers of portE are : 3V3, pull up ( top one to right, other to left )

*/

void main() {

 AD1PCFG = 0xFFFF; // Configure AN pins as digital I/O

 DDPCON.JTAGEN = 0; // disable JTAG

 TRISA = 0x0000;  //portA is output to turn on LEDs.
 TRISE = 0XFFFF;  //portE is inputs to read push-buttons.

 while(1)
 {
  // When both buttons are clicked, motor should not turn so ICQ called
  if ( portE.RE0 && portE.RE1 ) {
    portA = 0x0000;
  }
  else {
    portA.RA1 = portE.RE0; // button 0 is equal to 1, direction of the motor should be clockwise
    portA.RA2 = portE.RE1; // button 1 is equal to 1 its direction should be counterclockwise
  }
 }//while

}//main

------------------- end of part b ---------------------------------------------

 --> TRISA
 --> TRISE
 --> PORTA
 --> PORTE

------------------- end of part c ---------------------------------------------

/*
The seven-segment display C code that will display 4 digit numbers with consecutive
digits with incrementing every digit by 1 every second.

Configuration for the code below:

Connect portA to J1 Port of 4 Digit Seven Segment Module
Jumpers of portA are : 5V, pull down ( top one to left, other to right )

Connect portE to J2 Port of 4 Digit Seven Segment Module
Jumpers of portE are : 5V, pull down ( top one to left, other to right )

*/

// Hexadecimal values for digits in 7 segment
unsigned char binary_pattern[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};

void main() {

 AD1PCFG = 0xFFFF; // Configure AN pins as digital I/O
 JTAGEN_bit = 0; // Disable JTAG

 TRISA = 0x00;  //portA is output to D
 TRISE = 0X00;  //portE is output to AN

 int n1 = 0; // value of 7-segment 1st displayer
 int n2 = 1; // value of 7-segment 2nd displayer
 int n3 = 2; // value of 7-segment 3rd displayer
 int n4 = 3; // value of 7-segment 4th displayer

 while(1)
 {
     // 250 times 4 *(1ms) for updating once per second
     for ( int i = 0; i < 250; i++ ) {
         // Digit 1
         PORTA=binary_pattern[++n1];  // assign 7-segment representation of value inside n1 to portA from binary_pattern array
         PORTE=0x01;                  // Open first digit
         Delay_ms(1);                 // Wait 1 milisecond and switch to next digit

         // Digit 2
         PORTA=binary_pattern[++n2];  // assign 7-segment representation of value inside n2 to portA from binary_pattern array
         PORTE=0x02;                  // Open second digit
         Delay_ms(1);                 // Wait 1 milisecond and switch to next digit

         // Digit 3
         PORTA=binary_pattern[++n3];  // assign 7-segment representation of value inside n3 to portA from binary_pattern array
         PORTE=0x04;                  // Open third digit
         Delay_ms(1);                 // Wait 1 milisecond and switch to next digit

         // Digit 4
         PORTA=binary_pattern[++n4];  // assign 7-segment representation of value inside n4 to portA from binary_pattern array
         PORTE=0x08;                  // Open fourth digit
         Delay_ms(1);                 // Wait 1 milisecond and switch to next digit

         // Since the numbers rotate between 1 and 9, if it reaches 9, reset it.
         if ( n1 == 9 ) {
            n1 = 0;
         }
         if ( n2 == 9 ) {
            n2 = 0;
         }
         if ( n3 == 9 ) {
            n3 = 0;
         }
         if ( n4 == 9 ) {
            n4 = 0;
         }
     }
 }//while

}//main

------------------- end of part d ---------------------------------------------
